



Network Working Group                                           T. Pauly
Internet-Draft                                                   C. Wood
Intended status: Informational                                Apple Inc.
Expires: September 27, 2018                               March 26, 2018


                           TLS Ticket Request
                  draft-wood-tls-ticketrequest-latest

Abstract

   TLS session tickets are produced by servers to permit stateless
   session resumption for clients.  Moreover, servers often distribute
   at most one or two tickets to each client.  As a matter of security
   and privacy concerns, clients should only use tickets once,
   especially if tickets are used to protect early application data in
   TLS 1.3 and related protocols.  However, single tickets limit a
   client's ability to perform Happy Eyeball-style connection racing, as
   multiple competing connections should not re-use the same ticket more
   than once.  This document describes a mechanism that enables the
   clients to request multiple TLS session tickets from the server so as
   to enable such features.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 27, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of



Pauly & Wood           Expires September 27, 2018               [Page 1]

Internet-Draft             TLS Ticket Request                 March 2018


   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Requirements  . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Ticket Requests . . . . . . . . . . . . . . . . . . . . . . .   3
   5.  Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   4
   8.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   5
   9.  Normative References  . . . . . . . . . . . . . . . . . . . .   5
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Introduction

   As per [RFC5077], and as described in [I-D.ietf-tls-tls13], TLS
   servers send clients session tickets at their own discretion in
   NewSessionTicket messages.  In contrast, clients are in complete
   control of how many tickets they may use when establishing future
   connections.  For example, clients may open multiple TLS connections
   to the same server for HTTP, or may race TLS connections across
   different network interfaces.  The latter is especially useful in
   transport systems that implement Happy Eyeballs [RFC8305].  Thus,
   since connection concurrency and resumption is controlled by clients,
   a mechanism to request tickets on demand is desirable.  In this
   document, we describe a new TLS extension and handshake message that
   permits clients to request new session tickets at will from the
   server.

   This document specifies two new TLS handshake messages -
   TicketRequest and TicketResponse - that may be used to request
   tickets and receive TLS tickets.  Ticket requests may carry optional
   application contexts to limit the ways in which tickets may be used.

2.  Requirements

   TODO







Pauly & Wood           Expires September 27, 2018               [Page 2]

Internet-Draft             TLS Ticket Request                 March 2018


3.  Use Cases

   The ability to request one or more tickets is useful for a variety of
   purposes:

   o  Parallel HTTP connections: To minimize ticket reuse while still
      improving performance, it may be useful to use multiple separate
      tickets when opening parallel connections.  If servers do not vend
      more than one ticket, clients are forced to restrict the number of
      parallel connections or re-use tickets.

   o  Connection racing: Happy Eyeballs V2 [RFC8305] describes
      techniques for performing connection racing.  The Transport
      Services Architecture implementation from
      [I-D.brunstrom-taps-impl] also describes how connections may race
      across interfaces and address families.  In cases where clients
      have early data to send and want to minimize or avoid ticket re-
      use, unique tickets for each unique connection attempt are useful.

   o  Connection priming: In some systems, connections may be primed or
      bootstrapped by a centralized service or daemon for faster
      connection establishment.  Requesting tickets on demand allows
      such services to vend tickets to clients for improved performance.

   o  Less ticket waste: Currently, TLS servers use application-
      specific, and often implementation-specific, logic to determine
      how many tickets are issued.  By moving the burden of ticket
      deliverance to clients, servers do not need custom logic to
      determine how many tickets are issued to clients.

4.  Ticket Requests

   TLS tickets may be requested via a TicketRequest handshake message,
   ticket_request(25).  Its structure is shown below.

   struct {
       opaque identifier<0..255>;
       opaque request_context<0..255>;
   } TicketRequest;

   o  identifier: A unique value for this ticket request.  Clients
      SHOULD fill this in with a monotonically increasing counter.

   o  request_context: An opaque context to be used when generating the
      ticket request.  Clients and servers may use this context to
      implement or exchange data to be included in the ticket
      computation.  Clients SHOULD make this field empty if it is not
      needed.



Pauly & Wood           Expires September 27, 2018               [Page 3]

Internet-Draft             TLS Ticket Request                 March 2018


   Upon receipt of a TicketRequest message, servers MAY reply with a
   TicketResponse message, ticket_response(26).  Its structure is shown
   below.

   struct {
       opaque identifier<0..255>;
       opaque response_context<0..255>;
       NewSessionTicket ticket;
   } TicketResponse;

   o  identifier: A unique value for the response that MUST match the
      corresponding client TicketRequest.

   o  response_context: An opaque context to be used when generating
      each ticket for the request.  Servers MUST make this field empty
      if the corresponding TicketRequest request_context is empty.

   o  ticket: A NewSessionTicket message, encoded as detailed in
      [I-D.ietf-tls-tls13].

   Servers SHOULD place a limit on the number of tickets they are
   willing to vend to clients.  Servers MUST NOT send more than 255
   tickets to clients, as this is the limit imposed by the request and
   response identifier size.  TicketRequest messages MUST NOT be sent
   until after the TLS handshake is complete.  As handshake messages,
   these MUST be added to the handshake transcript.

5.  Negotiation

   Clients negotiate use of ticket requests via a new ExtensionType,
   ticket_request(50).  The extension_data for this extension MUST be
   empty (have a 0 length).  Servers that support ticket requests MAY
   echo this extension in the EncryptedExtensions.  Clients MUST NOT
   send ticket requests to servers that do not signal support for this
   message.  If absent from a ClientHello, servers MUST NOT generate
   responses to TicketRequests issued by the client.

6.  IANA Considerations

   ((TODO: codepoint for handshake message type))

7.  Security Considerations

   Ticket re-use is a privacy and security concern.  Moreover, pre-
   fetching as a means of avoiding or amortizing the cost of handshakes
   must also be used carefully.  If servers do not rotate session ticket
   encryption keys frequently, clients may be encouraged to obtain and
   use tickets beyond common lifetime windows of, e.g., 24 hours.



Pauly & Wood           Expires September 27, 2018               [Page 4]

Internet-Draft             TLS Ticket Request                 March 2018


   Despite ticket lifetime hints provided by servers, clients SHOULD
   dispose of pre-fetched tickets after some reasonable amount of time
   that mimics the ticket rotation period.

8.  Acknowledgments

   The authors would like to thank Nick Sullivan and Eric Rescorla for
   discussions on earlier versions of this draft.

9.  Normative References

   [I-D.brunstrom-taps-impl]
              Brunstrom, A., Pauly, T., Enghardt, T., Grinnemo, K.,
              Jones, T., Tiesel, P., Perkins, C., and M. Welzl,
              "Implementing Interfaces to Transport Services", draft-
              brunstrom-taps-impl-00 (work in progress), March 2018.

   [I-D.ietf-tls-tls13]
              Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", draft-ietf-tls-tls13-28 (work in progress),
              March 2018.

   [RFC2104]  Krawczyk, H., Bellare, M., and R. Canetti, "HMAC: Keyed-
              Hashing for Message Authentication", RFC 2104,
              DOI 10.17487/RFC2104, February 1997,
              <https://www.rfc-editor.org/info/rfc2104>.

   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,
              "Transport Layer Security (TLS) Session Resumption without
              Server-Side State", RFC 5077, DOI 10.17487/RFC5077,
              January 2008, <https://www.rfc-editor.org/info/rfc5077>.

   [RFC8305]  Schinazi, D. and T. Pauly, "Happy Eyeballs Version 2:
              Better Connectivity Using Concurrency", RFC 8305,
              DOI 10.17487/RFC8305, December 2017,
              <https://www.rfc-editor.org/info/rfc8305>.

Authors' Addresses

   Tommy Pauly
   Apple Inc.
   1 Infinite Loop
   Cupertino, California 95014
   United States of America

   Email: tfpauly@apple.com





Pauly & Wood           Expires September 27, 2018               [Page 5]

Internet-Draft             TLS Ticket Request                 March 2018


   Christopher A. Wood
   Apple Inc.
   1 Infinite Loop
   Cupertino, California 95014
   United States of America

   Email: cawood@apple.com












































Pauly & Wood           Expires September 27, 2018               [Page 6]
